{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","console","log","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserinput","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","prevState","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aafa3324.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-GB\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-GB\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onFilterChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n      return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n  <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ))}\r\n  </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n      const expenseMonth = expense.date.getMonth(); // 0 index => Jan\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  console.log(chartDataPoints);\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onFilterChange={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [userInput, setUserinput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setUserinput((prevState) => {\r\n      return { ...prevState, enteredTitle: event.target.value };\r\n    });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setUserinput((prevState) => {\r\n      return { ...prevState, enteredAmount: event.target.value };\r\n    });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setUserinput((prevState) => {\r\n      return { ...prevState, enteredDate: event.target.value };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: userInput.enteredTitle,\r\n      amount: +userInput.enteredAmount,\r\n      date: new Date(userInput.enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setUserinput({\r\n      enteredTitle: \"\",\r\n      enteredAmount: \"\",\r\n      enteredDate: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userInput.enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={userInput.enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={userInput.enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={onSaveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}